// Parâmetros

// Nem todos os parâmetros que definimos são utilizados quando uma função é executada, devido a falta de argumentos. Por isso é importante nos prepararmos para caso estes argumentos não sejam declarados.

function perimetroForma(lado, totalLados) {
  return lado * totalLados;
}

perimetroForma(10, 4); // 40
perimetroForma(10); // NaM

function perimetroForma(lado, totalLados) {
  return lado * totalLados;
}

perimetroForma(10, 4); // 40
perimetroForma(10); // NaM

// Arguments

// A palavra chave arguments é um objeto Array-like criado dentro da função. Esse objeto contém os valores dos argumentos.

function perimetroForma(lado, totalLados) {
  const argArray = Array.from(arguments);
  argArray.forEach((arg) => {
    console.log(arg);
  });
  return lado * totalLados;
}

perimetroForma(10, 4); // 40
perimetroForma(10); // NaM

// // Parâmetro Rest
// É possível declararmos um parâmetro utilizando ... na frente
// do mesmo. Assim todos os argumentos que passarmos na ativação da função, ficarão dentro do parâmetro.

function anunciarGanhadores(...ganhadores) {
  ganhadores.forEach((ganhador) => {
    console.log(ganhador + "ganhou.");
  });
}

anunciarGanhadores("Pedro", "Marta", "Maria");

// único rest
// só é possível ter um único parâmetro rest e ele deve ser o último.

function anunciarGanhadores(premio, ...ganhadores) {
  ganhadores.forEach((ganhador) => {
    console.log(ganhador + " ganhou um " + premio);
  });
}

anunciarGanhadores("Pedro", "Marta", "Maria");

//Rest vs Arguments
//Apesar de parecidos o parâmetro rest e a palavra arguments possuem grandes diferenças. Sendo rest uma array real e arguments um objeto Array-like.

function anunciarGanhadores(premio, ...ganhadores) {
  console.log(ganhadores);
  console.log(arguments);
}

// Operador Spread

// Assim como o rest, o operador spread também utiliza os ... para ser ativado.  O spread irá distribuir um item iterável, um por um.

const frutas = ["Banana", "Uva", "Morango"];
const legumes = ["Cenoura", "Batata"];

const comidas = [...frutas, "Pizza", ...legumes];

//Spread argument
// O Spread pode ser muito útil para funções que recebem uma lista de argumentos ao invés de um array

const numeroMaximo = Math.max(4, 5, 20, 10, 30, 2, 33, 5); // 33

const listaNumeros = [1, 13, 21, 12, 55, 2, 3, 43];

const numeroMaximoSpread = Math.max(...listaNumeros);

//Transformar em Array

// É possível transformar itens iteráveis em um array real com o spread

const btns = document.querySelectorAll("button");
const btnsArray = [...btns];

const frase = "Isso é javascript";
const frases = [...frase];
