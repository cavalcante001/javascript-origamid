// .blob()
// um blob é um tipo de objeto utilizado para representações de dados de um arquivo. O blob pode ser utilizado para transformarmos requisições de imagens por exemplo. O blob gera um URL único.

const div = document.createElement('div');

fetch('./images.png')
.then(response => response.blob())
.then(imgBlob => {
    const imagemDom = document.createElement('img');
    const src = URL.createObjectURL(imgBlob);
    imagemDom.src = src;
    imagemDom.alt = "Ayrton Senna";
    

    console.log(Object.getOwnPropertyNames(imgBlob));
    console.log(imgBlob.prototype);
    document.body.append(imagemDom);
});

//.clone()
//Ao utilizarmos os métodos acima, text, json e blob, a respsota é modificada. Por isso existe o método clone, caso você necessite transformar uma resposta em diferentes valores.

const div = document.createElement('div');

fetch('https://viacep.com.br/ws/01001000/json/')
.then(response => {
    const cloneResponse = response.clone();
    response.json().then(json => {
        console.log(json);
    });
    cloneResponse.text().then(text => {
        console.log(text);
    });
})

//.headers
//É uma propriedade que possui os cabeçalhos da requisição. É um tipo de dado iterável então podemos utilizar o forEach para vermos cada um deles

const div = document.createElement('div');
fetch('https://viacep.com.br/ws/010010000/json/')
.then(response => {
    response.headers.forEach(console.log);
});

//.status e .ok
// Retorna o status da requisição. Se foi 404, 200, 202 e mais. ok retorna um valor booleano e sendo true para uma requisição de sucesso e false para uma sem sucesso.

const div = document.createElement('div');
fetch('https://viacep.com.br/ws/01001000/json/')
.then(response => {
    console.log(response.status, response.ok)
    if(response.status === 404) {
        console.log('Página não encontrada')
    }
});

//.url e .type
//.url retorna o url da requisição e .type retorna o tipo da resposta

const div = document.createElement('div');
fetch('https://viacep.com.br/ws/01001000/json/')
.then(response => {
    console.log(response.type, response.url)
});

//se o type for basic significa que estamos fazendo uma requisição dentro do pŕoprio servidor
//cors significa que foi uma requisição fora, uma requisição para outro servidor mas que ela é permitida