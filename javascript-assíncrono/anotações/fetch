// Fetch API

// Permite fazermos requisições HTTP através do método fetch().
// Este método retorna a resolução de uma Promise. Podemos então utilizar
// o then para interagirmos com a resposta, que é um objeto do tipo Response.

fetch('./arquivo.txt').then(function(response) {
    console.log(response); // Response HTTP (Objeto)
});

//.json()
//Um tipo de formato de dados muito utilizado com Javascript é o JSON (Javascript object notation), pelo fato dele possuir basicamente a mesma sintaxe que a de um objeto js. .json() transforma um corpo em json em um objeto javascript   .

fetch('https://viacep.com.br/ws/01001000/json/')
    .then(response => response.json())
    .then(cep => {
        console.log(cep.bairro, cep.logradouro);
    });

// .text()
// Podemos utilizar o .text() para diferentes formatos como txt, json, html, css, js e mais.

const styleElement = document.createElement('style');
fetch('./style.css')
.then(response => response.text())
.then(style => {
    styleElement.innerHTML = style;
    document.body.appendChild(styleElement);
})

//html e text.()
//Podemos pegar um arquivo inteiro em HTML, transformar o corpo em texto e inserir em uma div com o innerHTML. A partir dai podemos manipular esses dados como um DOM qualquer.

const div = document.createElement('div');

fetch('./sobre.html')
.then(response => response.text())
.then(htmlBody => {
    div.innerHTML = htmlBody;
    const titulo = div.querySelector('h1');
    document.querySelector('h1').innerText = titulo.innerText;
})