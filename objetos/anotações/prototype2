// Construtores nativos

// Objetos, funções, Números, Strings e outros tipos de dados são criados utilizando construtores. Esses construtores possuem um protótipo com propriedades e métodos, que poderão ser acessados pelo tipo de dado.

const pais = "Brasil";
const cidade = new String("rio");

pais.charAt(0); //B
cidade.charAt(0); //R
String.prototype;

// É possível também acessar a função do protótipo

// É comum, principalmente em códigos mais antigos, o uso direto de funções do protótipo do construtor Array

const lista = document.querySelector("li");

//transforma em um array

const listaArray = Array.prototype.slice.call(lista);

//existe o método array.from();

// Métodos do Objeto vs Protótipo

// Nos objetos nativos existem métodos linkados diretamente ao Objeto e outros linkados ao protótipo.Array

Array.prototype.slice.call(lista);
Array.from(lista);

//Retorna uma lista com os métodos / propriedades
Object.getOwnPropertyNames(Array);
Object.getOwnPropertyNames(Array.prototype);

//dado.constructor.name , retorna o nome do construtor

// Apenas os métodos do protótipo são herdados

[1, 2, 3].slice(); // existe
[1, 2, 3].from(); // não existe

// Entenda o que está sendo retornado

// Os métodos e propriedades acessado com o . são referentes ao tipo de dados que é retornado antes desse .

const Carro = {
  marca: "Ford",
  preco: 2000,
  acelerar() {
    return true;
  },
};

Carro                   // Object
Carro.marca             // String
Carro.preco             // Number
Carro.acelerar          // Function
Carro.acelerar()        // Boolean
Carro.marca.charAt      // Function
Carro.marca.charAt(0)   // String